{"ast":null,"code":"var _jsxFileName = \"D:\\\\me-dot-me\\\\src\\\\components\\\\Practice\\\\Accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AccordionAPI } from \"./AccordionAPI\";\nimport { AccordionBdy } from \"./AccordionBdy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AcHeading = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\"\n};\nexport const AccordionJS = () => {\n  _s();\n\n  const [Question, setQuestion] = useState(AccordionAPI);\n  const [Show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Question.map(ce => {\n      return /*#__PURE__*/_jsxDEV(AccordionBdy, {}, ce.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false); // const [show, setshow] = useState(\"false\");\n  // return(\n  //     <>\n  //     {AccordionAPI.map((val) => (            \n  //         <div key={val.id} id={val.id}>            \n  //             <h3 style={AcHeading}>{val.heading}<span onClick={(e) => setshow(!show)}>{!show ? \"-\" : \"+\"}</span></h3>\n  //             {!show && <p>{val.text}</p>}\n  //         </div>  \n  //     ))}\n  //     </>\n  // )\n};\n\n_s(AccordionJS, \"ZMyz/dPwtxUN33p6SMUaEqoo10k=\");\n\n_c = AccordionJS;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionJS\");","map":{"version":3,"sources":["D:/me-dot-me/src/components/Practice/Accordion.js"],"names":["React","useState","AccordionAPI","AccordionBdy","AcHeading","display","justifyContent","alignItems","AccordionJS","Question","setQuestion","Show","setShow","map","ce","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;;;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,cAAc,EAAE,eAFF;AAGdC,EAAAA,UAAU,EAAE;AAHE,CAAlB;AAMA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACC,YAAD,CAAxC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AAEA,sBAAO;AAAA,cAKFQ,QAAQ,CAACI,GAAT,CAAcC,EAAD,IAAQ;AAClB,0BAAO,QAAC,YAAD,MAAmBA,EAAE,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA;AALE,mBAAP,CAJ6B,CAgB7B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA7BM;;GAAMP,W;;KAAAA,W","sourcesContent":["import React, {useState} from \"react\";\r\nimport {AccordionAPI} from \"./AccordionAPI\"\r\nimport {AccordionBdy} from \"./AccordionBdy\"\r\n\r\n\r\nconst AcHeading = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n}\r\n\r\nexport const AccordionJS = () => {\r\n    const [Question, setQuestion] = useState(AccordionAPI);\r\n    const [Show, setShow] = useState(false);\r\n\r\n    return(<>\r\n        {/* <h2>asdasdfas chart apex jquery-chart</h2> */}\r\n        \r\n\r\n\r\n        {Question.map((ce) => {\r\n            return <AccordionBdy key={ce.id} />\r\n        })}\r\n\r\n    </>)\r\n\r\n\r\n    // const [show, setshow] = useState(\"false\");\r\n\r\n    \r\n    // return(\r\n    //     <>\r\n    //     {AccordionAPI.map((val) => (            \r\n    //         <div key={val.id} id={val.id}>            \r\n    //             <h3 style={AcHeading}>{val.heading}<span onClick={(e) => setshow(!show)}>{!show ? \"-\" : \"+\"}</span></h3>\r\n    //             {!show && <p>{val.text}</p>}\r\n    //         </div>  \r\n    //     ))}\r\n    //     </>\r\n    // )\r\n}"]},"metadata":{},"sourceType":"module"}