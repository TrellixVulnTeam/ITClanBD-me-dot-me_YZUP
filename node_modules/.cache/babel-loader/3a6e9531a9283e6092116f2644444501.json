{"ast":null,"code":"var _jsxFileName = \"D:\\\\me-dot-me\\\\src\\\\components\\\\Practice\\\\Accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AccordionAPI } from \"./AccordionAPI\";\nimport { AccordionBdy } from \"./AccordionBdy\"; // const AcHeading = {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     alignItems: \"center\",\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AccordionJS = () => {\n  _s();\n\n  // const [Questin, setQuestin] = useState(AccordionAPI);\n  // return(<>\n  //     {Questin.map((ce) => {\n  //         const {id} = ce;\n  //         return <AccordionBdy key={id} {...ce}/>\n  //     })}\n  // </>)\n  const [Questin, setQuestin] = useState(AccordionAPI);\n  const [show, setshow] = useState(\"false\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: AccordionAPI.map(val => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: val.id,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: AcHeading,\n        children: [val.heading, /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => setshow(!show),\n          children: !show ? \"-\" : \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), !show && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: val.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 27\n      }, this)]\n    }, val.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n};\n\n_s(AccordionJS, \"nXdLk5j22y6oBwJS0ocaTtzwPvQ=\");\n\n_c = AccordionJS;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionJS\");","map":{"version":3,"sources":["D:/me-dot-me/src/components/Practice/Accordion.js"],"names":["React","useState","AccordionAPI","AccordionBdy","AccordionJS","Questin","setQuestin","show","setshow","map","val","id","AcHeading","heading","e","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,YAAR,QAA2B,gBAA3B,C,CAGA;AACA;AACA;AACA;AACA;;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACC,YAAD,CAAtC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,OAAD,CAAhC;AAGA,sBACI;AAAA,cACCC,YAAY,CAACO,GAAb,CAAkBC,GAAD,iBACd;AAAkB,MAAA,EAAE,EAAEA,GAAG,CAACC,EAA1B;AAAA,8BACI;AAAI,QAAA,KAAK,EAAEC,SAAX;AAAA,mBAAuBF,GAAG,CAACG,OAA3B,eAAmC;AAAM,UAAA,OAAO,EAAGC,CAAD,IAAON,OAAO,CAAC,CAACD,IAAF,CAA7B;AAAA,oBAAuC,CAACA,IAAD,GAAQ,GAAR,GAAc;AAArD;AAAA;AAAA;AAAA;AAAA,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,CAACA,IAAD,iBAAS;AAAA,kBAAIG,GAAG,CAACK;AAAR;AAAA;AAAA;AAAA;AAAA,cAFd;AAAA,OAAUL,GAAG,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,YADH;AADD,mBADJ;AAUH,CAzBM;;GAAMP,W;;KAAAA,W","sourcesContent":["import React, {useState} from \"react\";\r\nimport {AccordionAPI} from \"./AccordionAPI\"\r\nimport {AccordionBdy} from \"./AccordionBdy\"\r\n\r\n\r\n// const AcHeading = {\r\n//     display: \"flex\",\r\n//     justifyContent: \"space-between\",\r\n//     alignItems: \"center\",\r\n// }\r\n\r\nexport const AccordionJS = () => {\r\n    // const [Questin, setQuestin] = useState(AccordionAPI);\r\n\r\n    // return(<>\r\n    //     {Questin.map((ce) => {\r\n    //         const {id} = ce;\r\n    //         return <AccordionBdy key={id} {...ce}/>\r\n    //     })}\r\n\r\n    // </>)\r\n\r\n    const [Questin, setQuestin] = useState(AccordionAPI);\r\n    const [show, setshow] = useState(\"false\");\r\n\r\n    \r\n    return(\r\n        <>\r\n        {AccordionAPI.map((val) => (            \r\n            <div key={val.id} id={val.id}>            \r\n                <h3 style={AcHeading}>{val.heading}<span onClick={(e) => setshow(!show)}>{!show ? \"-\" : \"+\"}</span></h3>\r\n                {!show && <p>{val.text}</p>}\r\n            </div>  \r\n        ))}\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}