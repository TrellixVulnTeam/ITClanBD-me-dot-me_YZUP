{"ast":null,"code":"var _jsxFileName = \"D:\\\\me-dot-me\\\\src\\\\components\\\\Practice\\\\ToDoList.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState} from \"react\"; || NOT MENDATORY\nimport { useState } from \"react\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport { MdDeleteForever, MdPlaylistAdd } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DFlex = {\n  display: 'flex',\n  gap: '10px'\n};\nconst DNone = {\n  display: 'none'\n};\nexport const ToDOList = () => {\n  _s();\n\n  const [inValu, setinValu] = useState();\n  const [id, setid] = useState(0);\n  const [inArray, setinArray] = useState([]);\n\n  const AddList = () => {\n    const data = {\n      id: id,\n      item: inValu\n    };\n    setinArray([...inArray, data]);\n    setid(id + 1);\n    setinValu('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center bg-black\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 7,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 9,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"mb-0\",\n              type: \"text\",\n              placeholder: \"add a item\",\n              value: inValu,\n              onChange: x => setinValu(x.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: AddList,\n              children: /*#__PURE__*/_jsxDEV(MdPlaylistAdd, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"color-white p-0\",\n          children: inArray.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: val.item ? DFlex : DNone,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => delete val.id,\n                children: /*#__PURE__*/_jsxDEV(MdDeleteForever, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 88\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 51\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: val.item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 113\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false); // const [inputvlu, setinputvlu] = useState('');\n  // const [id, setid] = useState(0);\n  // const [listArray, setlistArray] = useState([]);\n  // const addButton = () => {\n  //   let data = {\n  //     item: inputvlu,\n  //     id: id,\n  //   }\n  //   setlistArray([...listArray, data]);\n  //   setid(id + 1);\n  //   setinputvlu('');\n  // }\n  // const DeleteFor = (e) => {\n  //   let UpdateArray = listArray.filter((iv) => iv.id !== e);\n  //   setlistArray(UpdateArray);\n  // }\n  // return(\n  // <>\n  //   <Container className=\"btToDoList bg-black pt-3 pb-4\">\n  //     <Row className=\"justify-content-center\"><Col sm={7}>\n  //       <Row className=\"align-items-center\"><Col sm={9}>\n  //         <input className=\"mb-0\" type=\"text\" placeholder=\"add a item\" value={inputvlu} onChange={(e) => setinputvlu(e.target.value)}/></Col>\n  //         <Col sm={3}><Button variant=\"success\" onClick={addButton}><BsPlusLg /></Button></Col></Row>\n  //         <ul className=\"color-white p-0\">\n  //         {listArray.map((v) => {\n  //           return (\n  //             <div style={v ? DFlex : DNone} key={v.id}><span onClick={() => DeleteFor(v.id)}><MdDeleteForever/></span><li>{v.item}</li></div>\n  //             )\n  //         })}\n  //         </ul>\n  //     </Col></Row>\n  //   </Container>           \n  // </>\n  // )\n};\n\n_s(ToDOList, \"x+33b0ofFn9dgoUU+ryQZQnG/i0=\");\n\n_c = ToDOList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDOList\");","map":{"version":3,"sources":["D:/me-dot-me/src/components/Practice/ToDoList.js"],"names":["useState","Row","Col","Button","MdDeleteForever","MdPlaylistAdd","DFlex","display","gap","DNone","ToDOList","inValu","setinValu","id","setid","inArray","setinArray","AddList","data","item","x","target","value","map","val"],"mappings":"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","sourcesContent":["// import React, {useState} from \"react\"; || NOT MENDATORY\r\nimport {useState} from \"react\";\r\nimport {Row, Col, Button } from \"react-bootstrap\";\r\nimport {MdDeleteForever, MdPlaylistAdd} from \"react-icons/md\"\r\n\r\n\r\nconst DFlex = {\r\n  display: 'flex',\r\n  gap: '10px',\r\n}\r\n\r\n\r\nconst DNone = {\r\n  display: 'none',\r\n}\r\n\r\n\r\nexport const ToDOList = () => { \r\n\r\n  const [inValu, setinValu] = useState();\r\n  const [id, setid] = useState(0);\r\n  const [inArray, setinArray] = useState([]);\r\n\r\n  const AddList = () => {\r\n    const data = {\r\n      id: id,\r\n      item: inValu,\r\n    }\r\n    setinArray([...inArray, data]);\r\n    setid(id + 1);\r\n    setinValu('');\r\n  }\r\n\r\n  return(<>\r\n    <Row className=\"justify-content-center bg-black\"><Col sm={7}>\r\n      <Row className=\"align-items-center\"><Col sm={9}>\r\n        <input className=\"mb-0\" type=\"text\" placeholder=\"add a item\" value={inValu} onChange={(x) => setinValu(x.target.value)}/></Col>\r\n        <Col sm={3}><Button variant=\"success\" onClick={AddList}><MdPlaylistAdd /></Button></Col></Row>\r\n        <ul className=\"color-white p-0\">\r\n          {inArray.map((val) => {return (\r\n            <div style={val.item ? DFlex : DNone}><span onClick={() => delete(val.id)}><MdDeleteForever/></span><li>{val.item}</li></div>\r\n          )})}        \r\n        </ul>\r\n    </Col></Row>\r\n  </>)\r\n\r\n  // const [inputvlu, setinputvlu] = useState('');\r\n  // const [id, setid] = useState(0);\r\n  // const [listArray, setlistArray] = useState([]);\r\n  // const addButton = () => {\r\n  //   let data = {\r\n  //     item: inputvlu,\r\n  //     id: id,\r\n  //   }\r\n  //   setlistArray([...listArray, data]);\r\n  //   setid(id + 1);\r\n  //   setinputvlu('');\r\n  // }\r\n  // const DeleteFor = (e) => {\r\n  //   let UpdateArray = listArray.filter((iv) => iv.id !== e);\r\n  //   setlistArray(UpdateArray);\r\n  // }\r\n  \r\n  // return(\r\n  // <>\r\n  //   <Container className=\"btToDoList bg-black pt-3 pb-4\">\r\n  //     <Row className=\"justify-content-center\"><Col sm={7}>\r\n  //       <Row className=\"align-items-center\"><Col sm={9}>\r\n  //         <input className=\"mb-0\" type=\"text\" placeholder=\"add a item\" value={inputvlu} onChange={(e) => setinputvlu(e.target.value)}/></Col>\r\n  //         <Col sm={3}><Button variant=\"success\" onClick={addButton}><BsPlusLg /></Button></Col></Row>\r\n  //         <ul className=\"color-white p-0\">\r\n\r\n  //         {listArray.map((v) => {\r\n  //           return (\r\n  //             <div style={v ? DFlex : DNone} key={v.id}><span onClick={() => DeleteFor(v.id)}><MdDeleteForever/></span><li>{v.item}</li></div>\r\n  //             )\r\n  //         })}\r\n  //         </ul>\r\n  //     </Col></Row>\r\n  //   </Container>           \r\n  // </>\r\n  // )\r\n}"]},"metadata":{},"sourceType":"module"}