{"ast":null,"code":"var _jsxFileName = \"D:\\\\me-dot-me\\\\src\\\\components\\\\Practice\\\\ToDoList.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState} from \"react\"; || NOT MENDATORY\nimport { useState } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { BsPlusLg } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DFlex = {\n  display: 'flex',\n  gap: '10px'\n};\nconst DNone = {\n  display: 'none'\n};\nexport const ToDOList = () => {\n  _s();\n\n  const [inputvlu, setinputvlu] = useState('');\n  const [id, setid] = useState(0);\n  const [listArray, setlistArray] = useState([]);\n\n  const addButton = () => {\n    let data = {\n      item: inputvlu,\n      id: id\n    };\n    setlistArray([...listArray, data]);\n    setid(id + 1);\n    setinputvlu('');\n  };\n\n  const DeleteFor = e => {\n    let UpdateArray = listArray.filter(iv => iv.id !== e);\n    setlistArray(UpdateArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"btToDoList bg-black pt-3 pb-4\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 7,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: 9,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"mb-0\",\n                type: \"text\",\n                placeholder: \"add a item\",\n                value: inputvlu,\n                onChange: e => setinputvlu(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                onClick: addButton,\n                children: /*#__PURE__*/_jsxDEV(BsPlusLg, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 69\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"color-white p-0\",\n            children: listArray.map(v => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: v ? DFlex : DNone,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => DeleteFor(v.id),\n                  children: /*#__PURE__*/_jsxDEV(MdDeleteForever, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 95\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: v.item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 120\n                }, this)]\n              }, v.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(ToDOList, \"yfq0cM8vm0N1xmI52dXlej7nSw8=\");\n\n_c = ToDOList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDOList\");","map":{"version":3,"sources":["D:/me-dot-me/src/components/Practice/ToDoList.js"],"names":["useState","Container","Row","Col","Button","MdDeleteForever","BsPlusLg","DFlex","display","gap","DNone","ToDOList","inputvlu","setinputvlu","id","setid","listArray","setlistArray","addButton","data","item","DeleteFor","e","UpdateArray","filter","iv","target","value","map","v"],"mappings":"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","sourcesContent":["// import React, {useState} from \"react\"; || NOT MENDATORY\r\nimport {useState} from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport {MdDeleteForever} from \"react-icons/md\"\r\nimport {BsPlusLg} from \"react-icons/bs\";\r\n\r\n\r\nconst DFlex = {\r\n  display: 'flex',\r\n  gap: '10px',\r\n}\r\n\r\n\r\nconst DNone = {\r\n  display: 'none',\r\n}\r\n\r\n\r\nexport const ToDOList = () => { \r\n  const [inputvlu, setinputvlu] = useState('');\r\n  const [id, setid] = useState(0);\r\n  const [listArray, setlistArray] = useState([]);\r\n  const addButton = () => {\r\n    let data = {\r\n      item: inputvlu,\r\n      id: id,\r\n    }\r\n    setlistArray([...listArray, data]);\r\n    setid(id + 1);\r\n    setinputvlu('');\r\n  }\r\n  const DeleteFor = (e) => {\r\n    let UpdateArray = listArray.filter((iv) => iv.id !== e);\r\n    setlistArray(UpdateArray);\r\n  }\r\n  \r\n  return(\r\n  <>\r\n    <Container className=\"btToDoList bg-black pt-3 pb-4\">\r\n      <Row className=\"justify-content-center\"><Col sm={7}>\r\n        <Row className=\"align-items-center\"><Col sm={9}>\r\n          <input className=\"mb-0\" type=\"text\" placeholder=\"add a item\" value={inputvlu} onChange={(e) => setinputvlu(e.target.value)}/></Col>\r\n          <Col sm={3}><Button variant=\"success\" onClick={addButton}><BsPlusLg /></Button></Col></Row>\r\n          <ul className=\"color-white p-0\">\r\n\r\n          {listArray.map((v) => {\r\n            return (\r\n              <div style={v ? DFlex : DNone} key={v.id}><span onClick={() => DeleteFor(v.id)}><MdDeleteForever/></span><li>{v.item}</li></div>\r\n              )\r\n          })}\r\n          </ul>\r\n      </Col></Row>\r\n    </Container>           \r\n  </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}