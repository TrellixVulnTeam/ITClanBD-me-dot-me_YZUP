{"ast":null,"code":"var _jsxFileName = \"D:\\\\me-dot-me\\\\src\\\\components\\\\Practice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { MdAdd, MdDeleteForever } from \"react-icons/md\";\nimport { BsPlusLg } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Practice = () => {\n  _s();\n\n  const [InputArrayList, setInputArrayListy] = useState(\"\");\n  const [ListArray, setListArray] = useState([]);\n\n  const InputChange = event => {\n    setInputArrayListy(event.target.value);\n  };\n\n  const addButton = () => {\n    setListArray(oldArray => {\n      return [...oldArray, InputArrayList];\n    });\n    setInputArrayListy(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"btToDoList bg-black pt-3 pb-4\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 7,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: 9,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"mb-0\",\n                type: \"text\",\n                value: InputArrayList,\n                placeholder: \"add a item\",\n                onChange: InputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                onClick: addButton,\n                children: /*#__PURE__*/_jsxDEV(BsPlusLg, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 79\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"color-white p-0\",\n            children: ListArray.map((val, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(MdDeleteForever, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\" \", val]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}; // export const Practice = () => {\n// {/* ============================ INCRIMENT DECRIMENT ==================================== */}\n// const [IncDecValue, setIncDecValue] = useState(0);\n// const IncrementButton = () => {\n//     if(IncDecValue >= 0 && IncDecValue < 10) {        \n//         setIncDecValue(IncDecValue + 1);\n//     }\n// } \n// const DecrementButton = () => {\n//     if(IncDecValue > 0) {            \n//         setIncDecValue(IncDecValue - 1);\n//     } else {\n//         alert(\"It's less then Zerro\");\n//     }\n// }\n// {/* ============================ picup wishes ==================================== */}\n// let d = new Date().getHours();\n// let wishes = '';\n// const chingeheading = {\n//     color: 'black',\n//     backgroundColor: 'skyblue',\n//     padding: '10px',\n//     margin: '0 auto',\n//     textAlign: 'center'\n// }\n// const headingSpan = {\n//     fontWeight: '400'\n// }\n// if(d>=1 && d<12){\n//     wishes = \"Good Morning\"\n//     headingSpan.color = '#fff';\n// } else if(d>=12 && d<20){\n//     wishes = \"Good Afternoon\";\n//     headingSpan.color= 'rgb(61, 165, 63)';\n// } else {\n//     wishes = \"Good Night\";\n//     headingSpan.color = 'red';\n// }       \n// {/* ============================ calculator ==================================== */}\n// function add(x,y) {\n//     let result = x+y;\n//     return result;\n// }\n// function sub(x,y) {\n//     let result = x-y;\n//     return result;\n// }\n// function mul(x,y) {\n//     let result = x*y;\n//     return result;\n// }\n// function divi(x,y) {\n//     let result = x/y;\n//     result = result.toFixed(3);\n//     return result;\n// }\n// {/* ============================ data collection on form ==================================== */}\n// const [storeValue, setStore] = useState();      \n// const [Heading, setHeading] = useState({        \n//     Fname: \"\",\n//     Lname: \"\",\n//     Email: \"\",\n//     PhoneNo: \"\",\n// });\n// const inputValue = (event) => {\n//     const {name, value} = event.target; // \"that means\" 'const value = event.target.value;' and 'const name = event.target.name;'\n//     setHeading(() => {\n//         return {\n//             ...Heading,\n//             [name] : value,\n//         }\n//     });\n// }\n// const Submit = (event) => {\n//     setStore(Heading.Fname + \", \" + Heading.Lname  + \", \" + Heading.Email  + \", \" + Heading.PhoneNo);\n// }\n// {/* ============================ show time ==================================== */}\n// let Time = new Date().toLocaleTimeString();\n// const [ShowTime, setShowTime] = useState(Time);\n// setInterval(() => {\n//     let CTime = new Date().toLocaleTimeString();\n//     setShowTime(CTime);\n// }, 1000);\n// {/* ============================ ToDoList ==================================== */}\n// const addButton = {\n//     width: '20px', \n//     textAlign: 'center', \n//     height: '20px',\n//     background: '#fff',\n//     marginRight: '6px',\n//     color: 'blue',\n//     fontSize: '18px',\n//     lineHeight: '19px',\n//     overflow: 'hidden',\n//     display: 'inline-block',\n//     cursor: 'pointer',\n// }\n// const [TodoOutput, setTodoOutput] = useState();\n// const [TodoListArray, setTodoListArray] = useState([]);\n// const ToDoInput = (event) => {\n//     setTodoOutput(event.target.value);\n// } \n// const addToDoList = () => {\n//     setTodoListArray((oldArray) => {\n//         return([...oldArray, TodoOutput]);\n//     });\n//     setTodoOutput(\"\");\n// }\n// const Dishmiss = (event) => {\n//     event.preventDefault();\n//     setTodoListArray((oldArray) => {\n//         return((               \n//             TodoListArray\n//         ));\n//     });\n//     console.log(\"ok\");\n// }\n// const [InputList, setInputList] = useState();\n// const [InputArray, setInputArray] = useState([]);\n// const InputChange = (event) => {\n//     setInputList(event.target.value);\n// }\n// const AddInputList = () => {\n//     setInputArray((OldArray) => {\n//         return([...OldArray, InputList]);\n//     })\n//     // setInputList(\"\");\n// }\n// return(\n// <>\n// {/* ============================ show time ==================================== */}\n// {/* <p>{ShowTime}</p> */}\n// {/* ============================ INCRIMENT DECRIMENT ==================================== */}\n// <div className=\"bg-black\">\n// <p className=\"color-white\">{IncDecValue}</p>\n//     <div><span onClick={IncrementButton} style={addButton}>+</span><span onClick={DecrementButton} style={addButton}>-</span></div>\n// </div>\n// {/* ============================ picup wishes ==================================== */}\n// <h1 style={chingeheading}>Hellow sir, <strong style={headingSpan}>{wishes}</strong></h1> \n// {/* ============================ calculator ==================================== */}\n// <h1 className=\"ic-mt-30\">calculator</h1>\n//     <ul>\n//         <li>{add(40,20)}</li>\n//         <li>{sub(10,20)}</li>\n//         <li>{mul(10,20)}</li>\n//         <li>{divi(20,15)}</li>\n//     </ul>\n// {/* ============================ data collection on form ==================================== */}\n//  <h1 className=\"ic-mt-30\">data collection form</h1>\n//    <form className=\"bg-black\">\n//    <h2 className=\"color-white\">{storeValue}</h2>\n//         <input \n//             type=\"text\" \n//             placeholder=\"enter first name\" \n//             name=\"Fname\"\n//             onChange={inputValue} \n//             value={Heading.Fname}\n//         />\n//         <input \n//             type=\"text\" \n//             placeholder=\"enter last name\" \n//             name=\"Lname\"\n//             onChange={inputValue} \n//             value={Heading.Lname}\n//         />\n//         <input \n//             type=\"text\" \n//             placeholder=\"Email\" \n//             name=\"Email\"\n//             onChange={inputValue} \n//             value={Heading.Email}\n//         />\n//         <input \n//             type=\"number\" \n//             placeholder=\"Phone no\" \n//             name=\"PhoneNo\"\n//             onChange={inputValue} \n//             value={Heading.PhoneNo}\n//         />\n//         <Link to=\"{void(0)}\" onClick={Submit}>Submit</Link>\n//     </form>\n// {/* ============================ ToDoList ==================================== */}\n// <div className=\"ToDoList-wrap ic-pt-40 ic-pb-40 bg-blue \">\n//     <h1 className=\"ic-mt-30 color-white ic-mb-20\">ToDo List</h1>\n//     <form aaction=\"#\" clssName=\"d-flex gap-2 align-items-center ic-mb-20\">\n//         <input className=\"ic-mb-0\" \n//         type=\"text\" \n//         placeholder=\"write list\"\n//         onChange={ToDoInput}\n//         value={TodoOutput}\n//          />\n//         <Link to=\"/\" \n//         style={addButton}\n//         onClick={addToDoList}\n//         > <MdAdd /> </Link>\n//     </form>           \n//     <ul className=\"todobody\">\n//         {\n//             TodoListArray.map((ListArray, index) => {\n//                 return (\n//                     <div className=\"d-flex align-item-center color-white\" key={index} id={index}>\n//                         <Link to=\"/\" style={addButton} onClick={Dishmiss}>X</Link>\n//                         <li>{ListArray}</li>\n//                     </div>\n//                 )\n//             })\n//         }\n//     </ul>\n// </div> \n// </>\n// )\n// }\n\n_s(Practice, \"OL9Cl/ho41KOVboAueyBSY8eU6I=\");\n\n_c = Practice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"sources":["D:/me-dot-me/src/components/Practice.js"],"names":["React","useState","Container","Row","Col","Alert","Button","Link","MdAdd","MdDeleteForever","BsPlusLg","Practice","InputArrayList","setInputArrayListy","ListArray","setListArray","InputChange","event","target","value","addButton","oldArray","map","val","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqCC,MAArC,QAAmD,iBAAnD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,KAAR,EAAeC,eAAf,QAAqC,gBAArC;AACA,SAAQC,QAAR,QAAuB,gBAAvB;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAG1B,QAAM,CAACC,cAAD,EAAiBC,kBAAjB,IAAuCZ,QAAQ,CAAC,EAAD,CAArD;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;;AAGA,QAAMe,WAAW,GAAIC,KAAD,IAAW;AAC3BJ,IAAAA,kBAAkB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACpBL,IAAAA,YAAY,CAAEM,QAAD,IAAc;AACvB,aAAM,CAAC,GAAGA,QAAJ,EAAcT,cAAd,CAAN;AACH,KAFW,CAAZ;AAGAC,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACH,GALD;;AAOA,sBACI;AAAA,2BAEI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI;AAAO,gBAAA,SAAS,EAAC,MAAjB;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,KAAK,EAAED,cAFX;AAGI,gBAAA,WAAW,EAAC,YAHhB;AAII,gBAAA,QAAQ,EAAEI;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,SAAhB;AAA0B,gBAAA,OAAO,EAAEI,SAAnC;AAAA,uCAA8C,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,sBAGQN,SAAS,CAACQ,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC1B,kCACI;AAAA,wCACI;AAAA,yCAAM,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,kCAAkBD,GAAlB;AAAA,mBAASC,KAAT;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAMH,aAPD;AAHR;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAqCH,CAvDM,C,CA4DP;AAII;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACI;AAEA;AACA;AAEI;AACA;AACA;AACA;AACA;AACJ;AACA;AAEI;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEJ;AACJ;AACJ;;GA1Uab,Q;;KAAAA,Q","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {MdAdd, MdDeleteForever} from \"react-icons/md\"\r\nimport {BsPlusLg} from \"react-icons/bs\"\r\n\r\nexport const Practice = () => {\r\n\r\n    \r\n    const [InputArrayList, setInputArrayListy] = useState(\"\");\r\n    const [ListArray, setListArray] = useState([]);\r\n\r\n\r\n    const InputChange = (event) => {\r\n        setInputArrayListy(event.target.value);\r\n    };\r\n\r\n    const addButton = () => {\r\n        setListArray((oldArray) => {\r\n            return[...oldArray, InputArrayList]\r\n        });\r\n        setInputArrayListy(\"\");\r\n    };\r\n\r\n    return(\r\n        <>\r\n\r\n            <Container className=\"btToDoList bg-black pt-3 pb-4\">\r\n                <Row className=\"justify-content-center\">\r\n                    <Col sm={7}>\r\n                        <Row className=\"align-items-center\">\r\n                            <Col sm={9}>\r\n                                <input className=\"mb-0\"\r\n                                    type=\"text\"                                    \r\n                                    value={InputArrayList}\r\n                                    placeholder=\"add a item\"\r\n                                    onChange={InputChange}\r\n                                />\r\n                            </Col>\r\n                            <Col sm={3}>\r\n                                <Button variant=\"success\" onClick={addButton}><BsPlusLg /></Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <ul className=\"color-white p-0\">\r\n\r\n                            {\r\n                                ListArray.map((val, index) => {\r\n                                    return (\r\n                                        <div>\r\n                                            <span><MdDeleteForever/></span>                                            \r\n                                            <li key={index}> {val}</li>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n// export const Practice = () => {\r\n\r\n    \r\n\r\n    // {/* ============================ INCRIMENT DECRIMENT ==================================== */}\r\n\r\n        \r\n    // const [IncDecValue, setIncDecValue] = useState(0);\r\n    // const IncrementButton = () => {\r\n    //     if(IncDecValue >= 0 && IncDecValue < 10) {        \r\n    //         setIncDecValue(IncDecValue + 1);\r\n    //     }\r\n    // } \r\n    // const DecrementButton = () => {\r\n    //     if(IncDecValue > 0) {            \r\n    //         setIncDecValue(IncDecValue - 1);\r\n    //     } else {\r\n    //         alert(\"It's less then Zerro\");\r\n    //     }\r\n    // }\r\n\r\n    // {/* ============================ picup wishes ==================================== */}\r\n    \r\n\r\n    // let d = new Date().getHours();\r\n    // let wishes = '';\r\n\r\n    // const chingeheading = {\r\n    //     color: 'black',\r\n    //     backgroundColor: 'skyblue',\r\n    //     padding: '10px',\r\n    //     margin: '0 auto',\r\n    //     textAlign: 'center'\r\n    // }\r\n\r\n    // const headingSpan = {\r\n    //     fontWeight: '400'\r\n    // }\r\n\r\n\r\n\r\n    // if(d>=1 && d<12){\r\n    //     wishes = \"Good Morning\"\r\n    //     headingSpan.color = '#fff';\r\n    // } else if(d>=12 && d<20){\r\n    //     wishes = \"Good Afternoon\";\r\n    //     headingSpan.color= 'rgb(61, 165, 63)';\r\n    // } else {\r\n    //     wishes = \"Good Night\";\r\n    //     headingSpan.color = 'red';\r\n    // }       \r\n    \r\n\r\n    // {/* ============================ calculator ==================================== */}\r\n    // function add(x,y) {\r\n    //     let result = x+y;\r\n    //     return result;\r\n    // }\r\n    \r\n    // function sub(x,y) {\r\n    //     let result = x-y;\r\n    //     return result;\r\n    // }\r\n    \r\n    // function mul(x,y) {\r\n    //     let result = x*y;\r\n    //     return result;\r\n    // }\r\n    \r\n    // function divi(x,y) {\r\n    //     let result = x/y;\r\n    //     result = result.toFixed(3);\r\n    //     return result;\r\n    // }\r\n\r\n    // {/* ============================ data collection on form ==================================== */}\r\n\r\n    // const [storeValue, setStore] = useState();      \r\n\r\n    // const [Heading, setHeading] = useState({        \r\n    //     Fname: \"\",\r\n    //     Lname: \"\",\r\n    //     Email: \"\",\r\n    //     PhoneNo: \"\",\r\n    // });\r\n\r\n    // const inputValue = (event) => {\r\n    //     const {name, value} = event.target; // \"that means\" 'const value = event.target.value;' and 'const name = event.target.name;'\r\n\r\n    //     setHeading(() => {\r\n\r\n    //         return {\r\n    //             ...Heading,\r\n    //             [name] : value,\r\n    //         }\r\n    //     });\r\n\r\n    // }\r\n\r\n    // const Submit = (event) => {\r\n    //     setStore(Heading.Fname + \", \" + Heading.Lname  + \", \" + Heading.Email  + \", \" + Heading.PhoneNo);\r\n    // }\r\n\r\n\r\n    // {/* ============================ show time ==================================== */}\r\n    // let Time = new Date().toLocaleTimeString();\r\n    // const [ShowTime, setShowTime] = useState(Time);\r\n    // setInterval(() => {\r\n    //     let CTime = new Date().toLocaleTimeString();\r\n    //     setShowTime(CTime);\r\n    // }, 1000);\r\n\r\n\r\n    \r\n\r\n    // {/* ============================ ToDoList ==================================== */}\r\n\r\n    // const addButton = {\r\n    //     width: '20px', \r\n    //     textAlign: 'center', \r\n    //     height: '20px',\r\n    //     background: '#fff',\r\n    //     marginRight: '6px',\r\n    //     color: 'blue',\r\n    //     fontSize: '18px',\r\n    //     lineHeight: '19px',\r\n    //     overflow: 'hidden',\r\n    //     display: 'inline-block',\r\n    //     cursor: 'pointer',\r\n    // }\r\n\r\n\r\n\r\n    \r\n\r\n    // const [TodoOutput, setTodoOutput] = useState();\r\n    // const [TodoListArray, setTodoListArray] = useState([]);\r\n\r\n    // const ToDoInput = (event) => {\r\n    //     setTodoOutput(event.target.value);\r\n    // } \r\n\r\n    // const addToDoList = () => {\r\n    //     setTodoListArray((oldArray) => {\r\n    //         return([...oldArray, TodoOutput]);\r\n    //     });\r\n    //     setTodoOutput(\"\");\r\n    // }\r\n\r\n    // const Dishmiss = (event) => {\r\n    //     event.preventDefault();\r\n    //     setTodoListArray((oldArray) => {\r\n    //         return((               \r\n    //             TodoListArray\r\n    //         ));\r\n    //     });\r\n    //     console.log(\"ok\");\r\n    // }\r\n\r\n    // const [InputList, setInputList] = useState();\r\n    // const [InputArray, setInputArray] = useState([]);\r\n    // const InputChange = (event) => {\r\n    //     setInputList(event.target.value);\r\n    // }\r\n\r\n    // const AddInputList = () => {\r\n    //     setInputArray((OldArray) => {\r\n    //         return([...OldArray, InputList]);\r\n    //     })\r\n    //     // setInputList(\"\");\r\n    // }\r\n\r\n  \r\n\r\n    // return(\r\n        // <>\r\n\r\n        // {/* ============================ show time ==================================== */}\r\n        // {/* <p>{ShowTime}</p> */}\r\n        \r\n            // {/* ============================ INCRIMENT DECRIMENT ==================================== */}\r\n            // <div className=\"bg-black\">\r\n            // <p className=\"color-white\">{IncDecValue}</p>\r\n            //     <div><span onClick={IncrementButton} style={addButton}>+</span><span onClick={DecrementButton} style={addButton}>-</span></div>\r\n            // </div>\r\n        // {/* ============================ picup wishes ==================================== */}\r\n        // <h1 style={chingeheading}>Hellow sir, <strong style={headingSpan}>{wishes}</strong></h1> \r\n\r\n            // {/* ============================ calculator ==================================== */}\r\n\r\n                // <h1 className=\"ic-mt-30\">calculator</h1>\r\n                //     <ul>\r\n                //         <li>{add(40,20)}</li>\r\n                //         <li>{sub(10,20)}</li>\r\n                //         <li>{mul(10,20)}</li>\r\n                //         <li>{divi(20,15)}</li>\r\n                //     </ul>\r\n\r\n\r\n            // {/* ============================ data collection on form ==================================== */}\r\n        //  <h1 className=\"ic-mt-30\">data collection form</h1>\r\n           \r\n        //    <form className=\"bg-black\">\r\n        //    <h2 className=\"color-white\">{storeValue}</h2>\r\n        //         <input \r\n        //             type=\"text\" \r\n        //             placeholder=\"enter first name\" \r\n        //             name=\"Fname\"\r\n        //             onChange={inputValue} \r\n        //             value={Heading.Fname}\r\n        //         />\r\n        //         <input \r\n        //             type=\"text\" \r\n        //             placeholder=\"enter last name\" \r\n        //             name=\"Lname\"\r\n        //             onChange={inputValue} \r\n        //             value={Heading.Lname}\r\n        //         />\r\n        //         <input \r\n        //             type=\"text\" \r\n        //             placeholder=\"Email\" \r\n        //             name=\"Email\"\r\n        //             onChange={inputValue} \r\n        //             value={Heading.Email}\r\n        //         />\r\n        //         <input \r\n        //             type=\"number\" \r\n        //             placeholder=\"Phone no\" \r\n        //             name=\"PhoneNo\"\r\n        //             onChange={inputValue} \r\n        //             value={Heading.PhoneNo}\r\n        //         />\r\n\r\n        //         <Link to=\"{void(0)}\" onClick={Submit}>Submit</Link>\r\n        //     </form>\r\n\r\n            // {/* ============================ ToDoList ==================================== */}\r\n            // <div className=\"ToDoList-wrap ic-pt-40 ic-pb-40 bg-blue \">\r\n            //     <h1 className=\"ic-mt-30 color-white ic-mb-20\">ToDo List</h1>\r\n            //     <form aaction=\"#\" clssName=\"d-flex gap-2 align-items-center ic-mb-20\">\r\n            //         <input className=\"ic-mb-0\" \r\n            //         type=\"text\" \r\n            //         placeholder=\"write list\"\r\n            //         onChange={ToDoInput}\r\n            //         value={TodoOutput}\r\n            //          />\r\n            //         <Link to=\"/\" \r\n            //         style={addButton}\r\n            //         onClick={addToDoList}\r\n            //         > <MdAdd /> </Link>\r\n            //     </form>           \r\n\r\n            //     <ul className=\"todobody\">\r\n\r\n            //         {\r\n            //             TodoListArray.map((ListArray, index) => {\r\n            //                 return (\r\n            //                     <div className=\"d-flex align-item-center color-white\" key={index} id={index}>\r\n            //                         <Link to=\"/\" style={addButton} onClick={Dishmiss}>X</Link>\r\n            //                         <li>{ListArray}</li>\r\n            //                     </div>\r\n            //                 )\r\n            //             })\r\n            //         }\r\n\r\n            //     </ul>\r\n            // </div> \r\n            \r\n        // </>\r\n    // )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}