{"ast":null,"code":"var _jsxFileName = \"D:\\\\me-dot-me\\\\src\\\\components\\\\Practice\\\\ToDoList.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState} from \"react\"; || NOT MENDATORY\nimport { useState } from \"react\";\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\nimport { MdAdd, MdMinimize, MdDeleteForever } from \"react-icons/md\";\nimport { BsPlusLg } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToDOList = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [id, setId] = useState(0);\n  const [items, setItems] = useState([]);\n\n  const addHandler = () => {\n    let data = {\n      name: name,\n      id: id\n    };\n    setItems([...items, data]);\n    setId(id + 1);\n  };\n\n  const deleteHandler = pId => {\n    let updateArr = items.filter(x => x.id !== pId);\n    setItems(updateArr);\n  }; // console.log(items);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello StackBlitz!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Start editing to see some magic happen :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addHandler,\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(i => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: i.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteHandler(i.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, i.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this); // const [item, setItem] = useState('')\n  // const[ListArray, setListArray] = useState([]);\n  // const addList = () => {\n  //     setListArray((oldArray) => {\n  //         return[...oldArray, item]\n  //     });\n  //     setItem('')\n  // }\n  // const DeleteItem = (val) => {\n  //     let updateArr = ListArray.filter(x => x !== val)\n  //    setListArray(updateArr)\n  // }\n  // return(\n  //     <>\n  //         <Container className=\"btToDoList bg-black pt-3 pb-4\">\n  //             <Row className=\"justify-content-center\">\n  //                 <Col sm={7}>\n  //                     <Row className=\"align-items-center\">\n  //                         <Col sm={9}>\n  //                             <input className=\"mb-0\"\n  //                                 type=\"text\"\n  //                                 value={item}    \n  //                                 placeholder=\"add a item\"\n  //                                 onChange = {e => setItem(e.target.value)}\n  //                             />\n  //                         </Col>\n  //                         <Col sm={3}>\n  //                             <Button variant=\"success\" onClick={addList}><BsPlusLg /></Button>\n  //                         </Col>\n  //                     </Row>\n  //                     <ul className=\"color-white p-0\">\n  //                         {\n  //                             ListArray.map((val, index) => {\n  //                                 return (\n  //                                     <div key={index} id={index} style={{display: val ? \"flex\" : \"none\"}}>\n  //                                         <span onClick={() => DeleteItem(val)}><MdDeleteForever/></span>\n  //                                         <li>{val}</li>\n  //                                     </div>\n  //                                 )\n  //                             })\n  //                         }\n  //                     </ul>\n  //                 </Col>\n  //             </Row>\n  //         </Container>           \n  //     </>\n  // )\n};\n\n_s(ToDOList, \"GwdyZ/VfSoZDOk4BvrGVo+AJOG0=\");\n\n_c = ToDOList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDOList\");","map":{"version":3,"sources":["D:/me-dot-me/src/components/Practice/ToDoList.js"],"names":["useState","Container","Row","Col","Alert","Button","MdAdd","MdMinimize","MdDeleteForever","BsPlusLg","ToDOList","name","setName","id","setId","items","setItems","addHandler","data","deleteHandler","pId","updateArr","filter","x","e","target","value","map","i"],"mappings":";;;AAAA;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqCC,MAArC,QAAmD,iBAAnD;AACA,SAAQC,KAAR,EAAeC,UAAf,EAA2BC,eAA3B,QAAiD,gBAAjD;AACA,SAAQC,QAAR,QAAuB,gBAAvB;;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACF,QAAM,CAACa,EAAD,EAAKC,KAAL,IAAcd,QAAQ,CAAC,CAAD,CAA5B;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMiB,UAAU,GAAG,MAAM;AACvB,QAAIC,IAAI,GAAG;AACTP,MAAAA,IAAI,EAAEA,IADG;AAETE,MAAAA,EAAE,EAAEA;AAFK,KAAX;AAIAG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWG,IAAX,CAAD,CAAR;AACAJ,IAAAA,KAAK,CAACD,EAAE,GAAG,CAAN,CAAL;AACD,GAPD;;AASA,QAAMM,aAAa,GAAIC,GAAD,IAAS;AAC7B,QAAIC,SAAS,GAAGN,KAAK,CAACO,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACV,EAAF,KAASO,GAA7B,CAAhB;AACAJ,IAAAA,QAAQ,CAACK,SAAD,CAAR;AACD,GAHD,CAf4B,CAmB5B;;;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGG,CAAD,IAAOZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAET,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,gBACGF,KAAK,CAACY,GAAN,CAAWC,CAAD,iBACT;AAAA,gCACE;AAAA,oBAAOA,CAAC,CAACjB;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMQ,aAAa,CAACS,CAAC,CAACf,EAAH,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAASe,CAAC,CAACf,EAAX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CApB4B,CAuC1B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAzFM;;GAAMH,Q;;KAAAA,Q","sourcesContent":["// import React, {useState} from \"react\"; || NOT MENDATORY\r\nimport {useState} from \"react\";\r\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\r\nimport {MdAdd, MdMinimize, MdDeleteForever} from \"react-icons/md\"\r\nimport {BsPlusLg} from \"react-icons/bs\";\r\n\r\n\r\nexport const ToDOList = () => {\r\n\r\n    const [name, setName] = useState('');\r\n  const [id, setId] = useState(0);\r\n  const [items, setItems] = useState([]);\r\n\r\n  const addHandler = () => {\r\n    let data = {\r\n      name: name,\r\n      id: id,\r\n    };\r\n    setItems([...items, data]);\r\n    setId(id + 1);\r\n  };\r\n\r\n  const deleteHandler = (pId) => {\r\n    let updateArr = items.filter((x) => x.id !== pId);\r\n    setItems(updateArr);\r\n  };\r\n  // console.log(items);\r\n  return (\r\n    <div>\r\n      <h1>Hello StackBlitz!</h1>\r\n      <p>Start editing to see some magic happen :)</p>\r\n      <input type=\"text\" onChange={(e) => setName(e.target.value)} />\r\n      <button onClick={addHandler}>click</button>\r\n      <hr />\r\n      <ul>\r\n        {items.map((i) => (\r\n          <li key={i.id}>\r\n            <span>{i.name}</span>\r\n            <button onClick={() => deleteHandler(i.id)}>delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n   \r\n    // const [item, setItem] = useState('')\r\n    // const[ListArray, setListArray] = useState([]);\r\n\r\n    // const addList = () => {\r\n    //     setListArray((oldArray) => {\r\n    //         return[...oldArray, item]\r\n    //     });\r\n    //     setItem('')\r\n    // }\r\n\r\n    // const DeleteItem = (val) => {\r\n    //     let updateArr = ListArray.filter(x => x !== val)\r\n    //    setListArray(updateArr)\r\n    // }\r\n    \r\n    // return(\r\n    //     <>\r\n    //         <Container className=\"btToDoList bg-black pt-3 pb-4\">\r\n    //             <Row className=\"justify-content-center\">\r\n    //                 <Col sm={7}>\r\n    //                     <Row className=\"align-items-center\">\r\n    //                         <Col sm={9}>\r\n    //                             <input className=\"mb-0\"\r\n    //                                 type=\"text\"\r\n    //                                 value={item}    \r\n    //                                 placeholder=\"add a item\"\r\n    //                                 onChange = {e => setItem(e.target.value)}\r\n    //                             />\r\n    //                         </Col>\r\n    //                         <Col sm={3}>\r\n    //                             <Button variant=\"success\" onClick={addList}><BsPlusLg /></Button>\r\n    //                         </Col>\r\n    //                     </Row>\r\n    //                     <ul className=\"color-white p-0\">\r\n    //                         {\r\n    //                             ListArray.map((val, index) => {\r\n    //                                 return (\r\n    //                                     <div key={index} id={index} style={{display: val ? \"flex\" : \"none\"}}>\r\n    //                                         <span onClick={() => DeleteItem(val)}><MdDeleteForever/></span>\r\n    //                                         <li>{val}</li>\r\n    //                                     </div>\r\n    //                                 )\r\n    //                             })\r\n    //                         }\r\n    //                     </ul>\r\n    //                 </Col>\r\n    //             </Row>\r\n    //         </Container>           \r\n    //     </>\r\n    // )\r\n}"]},"metadata":{},"sourceType":"module"}