{"ast":null,"code":"var _jsxFileName = \"D:\\\\me-dot-me\\\\src\\\\components\\\\Practice\\\\Accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AccordionAPI } from \"./AccordionAPI\";\nimport { AccordionBdy } from \"./AccordionBdy\"; // const AcHeading = {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     alignItems: \"center\",\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AccordionJS = () => {\n  _s();\n\n  const [Questin, setQuestin] = useState(AccordionAPI);\n  onst[(show, setshow)] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Questin.map(ce => {\n      const {\n        id\n      } = ce;\n      return /*#__PURE__*/_jsxDEV(\"div\", { ...ce,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: AcHeading,\n            children: [ce.heading, /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setshow(!show),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), show && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ce.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 27\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false); // const [Questin, setQuestin] = useState(AccordionAPI);\n  // return(<>\n  //     {Questin.map((ce) => {\n  //         const {id} = ce;\n  //         return <AccordionBdy key={id} {...ce}/>\n  //     })}\n  // </>)\n  // const [show, setshow] = useState(\"false\");\n  // return(\n  //     <>\n  //     {AccordionAPI.map((val) => (            \n  //         <div key={val.id} id={val.id}>            \n  //             <h3 style={AcHeading}>{val.heading}<span onClick={(e) => setshow(!show)}>{!show ? \"-\" : \"+\"}</span></h3>\n  //             {!show && <p>{val.text}</p>}\n  //         </div>  \n  //     ))}\n  //     </>\n  // )\n};\n\n_s(AccordionJS, \"JKMVzLZdfmWrhEDDVKeh9H3WoQo=\");\n\n_c = AccordionJS;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionJS\");","map":{"version":3,"sources":["D:/me-dot-me/src/components/Practice/Accordion.js"],"names":["React","useState","AccordionAPI","AccordionBdy","AccordionJS","Questin","setQuestin","onst","show","setshow","map","ce","id","AcHeading","heading","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,YAAR,QAA2B,gBAA3B,C,CAGA;AACA;AACA;AACA;AACA;;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACC,YAAD,CAAtC;AACAK,EAAAA,IAAI,EAAEC,IAAI,EAAEC,OAAR,EAAJ,GAAuBR,QAAQ,CAAC,KAAD,CAA/B;AAEA,sBAAO;AAAA,cACFI,OAAO,CAACK,GAAR,CAAaC,EAAD,IAAQ;AACjB,YAAM;AAACC,QAAAA;AAAD,UAAOD,EAAb;AACA,0BAAQ,oBAAkBA,EAAlB;AAAA,gCACJ;AAAA,iCACI;AAAI,YAAA,KAAK,EAAEE,SAAX;AAAA,uBAAuBF,EAAE,CAACG,OAA1B,eAAkC;AAAM,cAAA,OAAO,EAAE,MAAML,OAAO,CAAC,CAACD,IAAF,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADI,EAIFA,IAAI,iBAAI;AAAA,oBAAIG,EAAE,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,gBAJN;AAAA,SAAUH,EAAV;AAAA;AAAA;AAAA;AAAA,cAAR;AAMH,KARA;AADE,mBAAP,CAJ6B,CAgB7B;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAxCM;;GAAMR,W;;KAAAA,W","sourcesContent":["import React, {useState} from \"react\";\r\nimport {AccordionAPI} from \"./AccordionAPI\"\r\nimport {AccordionBdy} from \"./AccordionBdy\"\r\n\r\n\r\n// const AcHeading = {\r\n//     display: \"flex\",\r\n//     justifyContent: \"space-between\",\r\n//     alignItems: \"center\",\r\n// }\r\n\r\nexport const AccordionJS = () => {\r\n    const [Questin, setQuestin] = useState(AccordionAPI);\r\n    onst [show, setshow] = useState(false);\r\n\r\n    return(<>\r\n        {Questin.map((ce) => {\r\n            const {id} = ce;\r\n            return (<div key={id} {...ce}>\r\n                <div>\r\n                    <h3 style={AcHeading}>{ce.heading}<span onClick={() => setshow(!show)}>+</span></h3>\r\n                </div>\r\n                { show && <p>{ce.text}</p>}\r\n            </div>)\r\n        })}\r\n\r\n    </>)\r\n    // const [Questin, setQuestin] = useState(AccordionAPI);\r\n\r\n    // return(<>\r\n    //     {Questin.map((ce) => {\r\n    //         const {id} = ce;\r\n    //         return <AccordionBdy key={id} {...ce}/>\r\n    //     })}\r\n\r\n    // </>)\r\n\r\n\r\n    // const [show, setshow] = useState(\"false\");\r\n\r\n    \r\n    // return(\r\n    //     <>\r\n    //     {AccordionAPI.map((val) => (            \r\n    //         <div key={val.id} id={val.id}>            \r\n    //             <h3 style={AcHeading}>{val.heading}<span onClick={(e) => setshow(!show)}>{!show ? \"-\" : \"+\"}</span></h3>\r\n    //             {!show && <p>{val.text}</p>}\r\n    //         </div>  \r\n    //     ))}\r\n    //     </>\r\n    // )\r\n}"]},"metadata":{},"sourceType":"module"}