{"ast":null,"code":"var _jsxFileName = \"D:\\\\me-dot-me\\\\src\\\\components\\\\Practice.js\";\nimport React, { useState } from \"react\";\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Practice = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}; // import { Link } from \"react-router-dom\";\n// import {MdAdd, MdDeleteForever} from \"react-icons/md\"\n// import {BsPlusLg} from \"react-icons/bs\"\n// export const Practice = () => {\n//     const [todoList, settodoList] = useState();\n//     const[ListArray, setListArray] = useState([]);\n//     const Inchange = (event) => {\n//         settodoList(event.target.value);\n//     };\n//     const addList = () => {\n//         setListArray((oldArray) => {\n//             return[...oldArray, todoList]\n//         });\n//         settodoList(\"\");\n//     }\n//     return(\n//         <>\n//             <Container className=\"btToDoList bg-black pt-3 pb-4\">\n//                 <Row className=\"justify-content-center\">\n//                     <Col sm={7}>\n//                         <Row className=\"align-items-center\">\n//                             <Col sm={9}>\n//                                 <input className=\"mb-0\"\n//                                     type=\"text\"\n//                                     value={todoList}    \n//                                     placeholder=\"add a item\"\n//                                     onChange={Inchange}\n//                                 />\n//                             </Col>\n//                             <Col sm={3}>\n//                                 <Button variant=\"success\" onClick={addList}><BsPlusLg /></Button>\n//                             </Col>\n//                         </Row>\n//                         <ul className=\"color-white p-0\">\n//                             {\n//                                 ListArray.map((val) => {\n//                                     return (\n//                                         <div style={{display: val ? \"flex\" : \"none\"}}>\n//                                             <span><MdDeleteForever/></span>\n//                                             <li>{val}</li>\n//                                         </div>\n//                                     )\n//                                 })\n//                             }\n//                         </ul>\n//                     </Col>\n//                 </Row>\n//             </Container>           \n//         </>\n//     )\n// }\n// ============================ ToDOList ====================================\n// export const Practice = () => {\n//     const [InputArrayList, setInputArrayListy] = useState(\"\");\n//     const [ListArray, setListArray] = useState([]);\n//     const [line, setline] = useState(false);\n//     const ItemRemove = () => {\n//         setline(true);\n//     }\n//     const InputChange = (event) => {\n//         setInputArrayListy(event.target.value);\n//     };\n//     const addButton = () => {\n//         setListArray((oldArray) => {\n//             return[...oldArray, InputArrayList]\n//         });\n//         setInputArrayListy(\"\");\n//     };\n//     return(\n//         <>\n//             <Container className=\"btToDoList bg-black pt-3 pb-4\">\n//                 <Row className=\"justify-content-center\">\n//                     <Col sm={7}>\n//                         <Row className=\"align-items-center\">\n//                             <Col sm={9}>\n//                                 <input className=\"mb-0\"\n//                                     type=\"text\"                                    \n//                                     value={InputArrayList}\n//                                     placeholder=\"add a item\"\n//                                     onChange={InputChange}\n//                                 />\n//                             </Col>\n//                             <Col sm={3}>\n//                                 <Button variant=\"success\" onClick={addButton}><BsPlusLg /></Button>\n//                             </Col>\n//                         </Row>\n//                         <ul className=\"color-white p-0\">\n//                             {\n//                                 ListArray.map((val, index) => {\n//                                     return (\n//                                         <div key={index} style={{display: val ? \"flex\" : \"none\"}}>\n//                                             <span onClick={ItemRemove}><MdDeleteForever/></span>                                            \n//                                             <li style={{ textDecorationLine: line ? \"line-through\" : \"none\" }}> {val}</li>\n//                                         </div>\n//                                     )\n//                                 })\n//                             }\n//                         </ul>\n//                     </Col>\n//                 </Row>\n//             </Container>\n//         </>\n//     )\n// }\n// export const Practice = () => {\n// {/* ============================ INCRIMENT DECRIMENT ==================================== */}\n// const [IncDecValue, setIncDecValue] = useState(0);\n// const IncrementButton = () => {\n//     if(IncDecValue >= 0 && IncDecValue < 10) {        \n//         setIncDecValue(IncDecValue + 1);\n//     }\n// } \n// const DecrementButton = () => {\n//     if(IncDecValue > 0) {            \n//         setIncDecValue(IncDecValue - 1);\n//     } else {\n//         alert(\"It's less then Zerro\");\n//     }\n// }\n// {/* ============================ picup wishes ==================================== */}\n// let d = new Date().getHours();\n// let wishes = '';\n// const chingeheading = {\n//     color: 'black',\n//     backgroundColor: 'skyblue',\n//     padding: '10px',\n//     margin: '0 auto',\n//     textAlign: 'center'\n// }\n// const headingSpan = {\n//     fontWeight: '400'\n// }\n// if(d>=1 && d<12){\n//     wishes = \"Good Morning\"\n//     headingSpan.color = '#fff';\n// } else if(d>=12 && d<20){\n//     wishes = \"Good Afternoon\";\n//     headingSpan.color= 'rgb(61, 165, 63)';\n// } else {\n//     wishes = \"Good Night\";\n//     headingSpan.color = 'red';\n// }       \n// {/* ============================ calculator ==================================== */}\n// function add(x,y) {\n//     let result = x+y;\n//     return result;\n// }\n// function sub(x,y) {\n//     let result = x-y;\n//     return result;\n// }\n// function mul(x,y) {\n//     let result = x*y;\n//     return result;\n// }\n// function divi(x,y) {\n//     let result = x/y;\n//     result = result.toFixed(3);\n//     return result;\n// }\n// {/* ============================ data collection on form ==================================== */}\n// const [storeValue, setStore] = useState();      \n// const [Heading, setHeading] = useState({        \n//     Fname: \"\",\n//     Lname: \"\",\n//     Email: \"\",\n//     PhoneNo: \"\",\n// });\n// const inputValue = (event) => {\n//     const {name, value} = event.target; // \"that means\" 'const value = event.target.value;' and 'const name = event.target.name;'\n//     setHeading(() => {\n//         return {\n//             ...Heading,\n//             [name] : value,\n//         }\n//     });\n// }\n// const Submit = (event) => {\n//     setStore(Heading.Fname + \", \" + Heading.Lname  + \", \" + Heading.Email  + \", \" + Heading.PhoneNo);\n// }\n// {/* ============================ show time ==================================== */}\n// let Time = new Date().toLocaleTimeString();\n// const [ShowTime, setShowTime] = useState(Time);\n// setInterval(() => {\n//     let CTime = new Date().toLocaleTimeString();\n//     setShowTime(CTime);\n// }, 1000);\n// return(\n// <>\n// {/* ============================ show time ==================================== */}\n// {/* <p>{ShowTime}</p> */}\n// {/* ============================ INCRIMENT DECRIMENT ==================================== */}\n// <div className=\"bg-black\">\n// <p className=\"color-white\">{IncDecValue}</p>\n//     <div><span onClick={IncrementButton} style={addButton}>+</span><span onClick={DecrementButton} style={addButton}>-</span></div>\n// </div>\n// {/* ============================ picup wishes ==================================== */}\n// <h1 style={chingeheading}>Hellow sir, <strong style={headingSpan}>{wishes}</strong></h1> \n// {/* ============================ calculator ==================================== */}\n// <h1 className=\"ic-mt-30\">calculator</h1>\n//     <ul>\n//         <li>{add(40,20)}</li>\n//         <li>{sub(10,20)}</li>\n//         <li>{mul(10,20)}</li>\n//         <li>{divi(20,15)}</li>\n//     </ul>\n// {/* ============================ data collection on form ==================================== */}\n//  <h1 className=\"ic-mt-30\">data collection form</h1>\n//    <form className=\"bg-black\">\n//    <h2 className=\"color-white\">{storeValue}</h2>\n//         <input \n//             type=\"text\" \n//             placeholder=\"enter first name\" \n//             name=\"Fname\"\n//             onChange={inputValue} \n//             value={Heading.Fname}\n//         />\n//         <input \n//             type=\"text\" \n//             placeholder=\"enter last name\" \n//             name=\"Lname\"\n//             onChange={inputValue} \n//             value={Heading.Lname}\n//         />\n//         <input \n//             type=\"text\" \n//             placeholder=\"Email\" \n//             name=\"Email\"\n//             onChange={inputValue} \n//             value={Heading.Email}\n//         />\n//         <input \n//             type=\"number\" \n//             placeholder=\"Phone no\" \n//             name=\"PhoneNo\"\n//             onChange={inputValue} \n//             value={Heading.PhoneNo}\n//         />\n//         <Link to=\"{void(0)}\" onClick={Submit}>Submit</Link>\n//     </form>\n// </>\n// )\n// }\n\n_c = Practice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"sources":["D:/me-dot-me/src/components/Practice.js"],"names":["React","useState","Container","Row","Col","Alert","Button","Practice"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqCC,MAArC,QAAmD,iBAAnD;;;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,sBACI;AAAA,2BACG,QAAC,SAAD;AAAA,6BACI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADH,mBADJ;AASH,CAVM,C,CAchUaA,Q","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Container, Row, Col, Alert, Button } from \"react-bootstrap\";\r\n\r\n\r\nexport const Practice = () => {\r\n    return(\r\n        <>\r\n           <Container>\r\n               <Row>\r\n                   <Col sm={5}></Col>\r\n               </Row>\r\n           </Container> \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n// import { Link } from \"react-router-dom\";\r\n// import {MdAdd, MdDeleteForever} from \"react-icons/md\"\r\n// import {BsPlusLg} from \"react-icons/bs\"\r\n\r\n\r\n// export const Practice = () => {\r\n\r\n//     const [todoList, settodoList] = useState();\r\n//     const[ListArray, setListArray] = useState([]);\r\n\r\n//     const Inchange = (event) => {\r\n//         settodoList(event.target.value);\r\n//     };\r\n\r\n//     const addList = () => {\r\n//         setListArray((oldArray) => {\r\n//             return[...oldArray, todoList]\r\n//         });\r\n//         settodoList(\"\");\r\n//     }\r\n\r\n//     return(\r\n//         <>\r\n//             <Container className=\"btToDoList bg-black pt-3 pb-4\">\r\n//                 <Row className=\"justify-content-center\">\r\n//                     <Col sm={7}>\r\n//                         <Row className=\"align-items-center\">\r\n//                             <Col sm={9}>\r\n//                                 <input className=\"mb-0\"\r\n//                                     type=\"text\"\r\n//                                     value={todoList}    \r\n//                                     placeholder=\"add a item\"\r\n//                                     onChange={Inchange}\r\n//                                 />\r\n//                             </Col>\r\n//                             <Col sm={3}>\r\n//                                 <Button variant=\"success\" onClick={addList}><BsPlusLg /></Button>\r\n//                             </Col>\r\n//                         </Row>\r\n//                         <ul className=\"color-white p-0\">\r\n//                             {\r\n//                                 ListArray.map((val) => {\r\n//                                     return (\r\n//                                         <div style={{display: val ? \"flex\" : \"none\"}}>\r\n//                                             <span><MdDeleteForever/></span>\r\n//                                             <li>{val}</li>\r\n//                                         </div>\r\n//                                     )\r\n//                                 })\r\n//                             }\r\n//                         </ul>\r\n//                     </Col>\r\n//                 </Row>\r\n//             </Container>           \r\n//         </>\r\n//     )\r\n// }\r\n\r\n// ============================ ToDOList ====================================\r\n// export const Practice = () => {\r\n\r\n    \r\n//     const [InputArrayList, setInputArrayListy] = useState(\"\");\r\n//     const [ListArray, setListArray] = useState([]);\r\n//     const [line, setline] = useState(false);\r\n\r\n//     const ItemRemove = () => {\r\n//         setline(true);\r\n//     }\r\n    \r\n//     const InputChange = (event) => {\r\n//         setInputArrayListy(event.target.value);\r\n//     };\r\n\r\n//     const addButton = () => {\r\n//         setListArray((oldArray) => {\r\n//             return[...oldArray, InputArrayList]\r\n//         });\r\n//         setInputArrayListy(\"\");\r\n//     };\r\n\r\n    \r\n\r\n//     return(\r\n//         <>\r\n\r\n//             <Container className=\"btToDoList bg-black pt-3 pb-4\">\r\n//                 <Row className=\"justify-content-center\">\r\n//                     <Col sm={7}>\r\n//                         <Row className=\"align-items-center\">\r\n//                             <Col sm={9}>\r\n//                                 <input className=\"mb-0\"\r\n//                                     type=\"text\"                                    \r\n//                                     value={InputArrayList}\r\n//                                     placeholder=\"add a item\"\r\n//                                     onChange={InputChange}\r\n//                                 />\r\n//                             </Col>\r\n//                             <Col sm={3}>\r\n//                                 <Button variant=\"success\" onClick={addButton}><BsPlusLg /></Button>\r\n//                             </Col>\r\n//                         </Row>\r\n//                         <ul className=\"color-white p-0\">\r\n\r\n//                             {\r\n//                                 ListArray.map((val, index) => {\r\n//                                     return (\r\n//                                         <div key={index} style={{display: val ? \"flex\" : \"none\"}}>\r\n//                                             <span onClick={ItemRemove}><MdDeleteForever/></span>                                            \r\n//                                             <li style={{ textDecorationLine: line ? \"line-through\" : \"none\" }}> {val}</li>\r\n//                                         </div>\r\n//                                     )\r\n//                                 })\r\n//                             }\r\n//                         </ul>\r\n//                     </Col>\r\n//                 </Row>\r\n//             </Container>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n// export const Practice = () => {\r\n\r\n    \r\n\r\n    // {/* ============================ INCRIMENT DECRIMENT ==================================== */}\r\n\r\n        \r\n    // const [IncDecValue, setIncDecValue] = useState(0);\r\n    // const IncrementButton = () => {\r\n    //     if(IncDecValue >= 0 && IncDecValue < 10) {        \r\n    //         setIncDecValue(IncDecValue + 1);\r\n    //     }\r\n    // } \r\n    // const DecrementButton = () => {\r\n    //     if(IncDecValue > 0) {            \r\n    //         setIncDecValue(IncDecValue - 1);\r\n    //     } else {\r\n    //         alert(\"It's less then Zerro\");\r\n    //     }\r\n    // }\r\n\r\n    // {/* ============================ picup wishes ==================================== */}\r\n    \r\n\r\n    // let d = new Date().getHours();\r\n    // let wishes = '';\r\n\r\n    // const chingeheading = {\r\n    //     color: 'black',\r\n    //     backgroundColor: 'skyblue',\r\n    //     padding: '10px',\r\n    //     margin: '0 auto',\r\n    //     textAlign: 'center'\r\n    // }\r\n\r\n    // const headingSpan = {\r\n    //     fontWeight: '400'\r\n    // }\r\n\r\n\r\n\r\n    // if(d>=1 && d<12){\r\n    //     wishes = \"Good Morning\"\r\n    //     headingSpan.color = '#fff';\r\n    // } else if(d>=12 && d<20){\r\n    //     wishes = \"Good Afternoon\";\r\n    //     headingSpan.color= 'rgb(61, 165, 63)';\r\n    // } else {\r\n    //     wishes = \"Good Night\";\r\n    //     headingSpan.color = 'red';\r\n    // }       \r\n    \r\n\r\n    // {/* ============================ calculator ==================================== */}\r\n    // function add(x,y) {\r\n    //     let result = x+y;\r\n    //     return result;\r\n    // }\r\n    \r\n    // function sub(x,y) {\r\n    //     let result = x-y;\r\n    //     return result;\r\n    // }\r\n    \r\n    // function mul(x,y) {\r\n    //     let result = x*y;\r\n    //     return result;\r\n    // }\r\n    \r\n    // function divi(x,y) {\r\n    //     let result = x/y;\r\n    //     result = result.toFixed(3);\r\n    //     return result;\r\n    // }\r\n\r\n    // {/* ============================ data collection on form ==================================== */}\r\n\r\n    // const [storeValue, setStore] = useState();      \r\n\r\n    // const [Heading, setHeading] = useState({        \r\n    //     Fname: \"\",\r\n    //     Lname: \"\",\r\n    //     Email: \"\",\r\n    //     PhoneNo: \"\",\r\n    // });\r\n\r\n    // const inputValue = (event) => {\r\n    //     const {name, value} = event.target; // \"that means\" 'const value = event.target.value;' and 'const name = event.target.name;'\r\n\r\n    //     setHeading(() => {\r\n\r\n    //         return {\r\n    //             ...Heading,\r\n    //             [name] : value,\r\n    //         }\r\n    //     });\r\n\r\n    // }\r\n\r\n    // const Submit = (event) => {\r\n    //     setStore(Heading.Fname + \", \" + Heading.Lname  + \", \" + Heading.Email  + \", \" + Heading.PhoneNo);\r\n    // }\r\n\r\n\r\n    // {/* ============================ show time ==================================== */}\r\n    // let Time = new Date().toLocaleTimeString();\r\n    // const [ShowTime, setShowTime] = useState(Time);\r\n    // setInterval(() => {\r\n    //     let CTime = new Date().toLocaleTimeString();\r\n    //     setShowTime(CTime);\r\n    // }, 1000);\r\n\r\n\r\n  \r\n\r\n    // return(\r\n        // <>\r\n\r\n        // {/* ============================ show time ==================================== */}\r\n        // {/* <p>{ShowTime}</p> */}\r\n        \r\n            // {/* ============================ INCRIMENT DECRIMENT ==================================== */}\r\n            // <div className=\"bg-black\">\r\n            // <p className=\"color-white\">{IncDecValue}</p>\r\n            //     <div><span onClick={IncrementButton} style={addButton}>+</span><span onClick={DecrementButton} style={addButton}>-</span></div>\r\n            // </div>\r\n        // {/* ============================ picup wishes ==================================== */}\r\n        // <h1 style={chingeheading}>Hellow sir, <strong style={headingSpan}>{wishes}</strong></h1> \r\n\r\n            // {/* ============================ calculator ==================================== */}\r\n\r\n                // <h1 className=\"ic-mt-30\">calculator</h1>\r\n                //     <ul>\r\n                //         <li>{add(40,20)}</li>\r\n                //         <li>{sub(10,20)}</li>\r\n                //         <li>{mul(10,20)}</li>\r\n                //         <li>{divi(20,15)}</li>\r\n                //     </ul>\r\n\r\n\r\n            // {/* ============================ data collection on form ==================================== */}\r\n        //  <h1 className=\"ic-mt-30\">data collection form</h1>\r\n           \r\n        //    <form className=\"bg-black\">\r\n        //    <h2 className=\"color-white\">{storeValue}</h2>\r\n        //         <input \r\n        //             type=\"text\" \r\n        //             placeholder=\"enter first name\" \r\n        //             name=\"Fname\"\r\n        //             onChange={inputValue} \r\n        //             value={Heading.Fname}\r\n        //         />\r\n        //         <input \r\n        //             type=\"text\" \r\n        //             placeholder=\"enter last name\" \r\n        //             name=\"Lname\"\r\n        //             onChange={inputValue} \r\n        //             value={Heading.Lname}\r\n        //         />\r\n        //         <input \r\n        //             type=\"text\" \r\n        //             placeholder=\"Email\" \r\n        //             name=\"Email\"\r\n        //             onChange={inputValue} \r\n        //             value={Heading.Email}\r\n        //         />\r\n        //         <input \r\n        //             type=\"number\" \r\n        //             placeholder=\"Phone no\" \r\n        //             name=\"PhoneNo\"\r\n        //             onChange={inputValue} \r\n        //             value={Heading.PhoneNo}\r\n        //         />\r\n\r\n        //         <Link to=\"{void(0)}\" onClick={Submit}>Submit</Link>\r\n        //     </form>\r\n\r\n            \r\n            \r\n        // </>\r\n    // )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}